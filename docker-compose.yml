version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: store_development
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7.0.15-alpine
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  web:
    build: .
    command: bash -lc "bundle exec rails db:prepare && bundle exec rails s -b 0.0.0.0 -p 3000"
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/store_development
      REDIS_URL: redis://redis:6379/1
      RAILS_ENV: development
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build: .
    command: bash -lc "bundle exec sidekiq"
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/store_development
      REDIS_URL: redis://redis:6379/1
      RAILS_ENV: development
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  test:
    build: .
    command: bash -lc "bundle exec rails db:prepare RAILS_ENV=test && bundle exec rspec"
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/store_test
      REDIS_URL: redis://redis:6379/0
      RAILS_ENV: test
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  pg_data:
  redis_data:
